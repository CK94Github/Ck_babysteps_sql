*****day1 *************
mysql -u root
create database batch7;
use batch7;
datatypes
int ---numeric value
char/varchar(50)---display the sequces of characters   e.g name,address,city
float---decimal point data e.g marks--20.50,salary ---232334.5
date ---display date ("yyyy-mm-dd") e.g DOB=="2022-09-08"
DDL commands
creating table***********
syntax:
create table table_name(columnname1 datatype,columnname2 datatype)
query:
create table student(id int,name varchar(10),age int,marks float);
showing tables in database*********
show tables;
task*****
table name----employee
column name
id--int
name---varchar
address--varchar
salary--float
degination-varchar
insert into student values(100,"ram",20,20.4);
select * from student;
**** day2 adding constraints in table*********
constraints----set of rules which defines for creating tables
1)primary key--
     --always contains unique value
      --not allow to null values
       --one table contains only one primary
2)not null
---not allow null value
---allow duplicate values

3)unique
---not allow duplicate
---allow null

4) check---apply for specific condition
e.g age >18


create table customer(id int primary key,name varchar(20) not null,address varchar(20) unique,pincode int,age int check(age>18));

alter commands----
adding new column
syntax:
alter table table_name add column column_name datatype
query:
alter table customer add column mobnumber int;


drop column*********
syntax:
alter table  tablename drop column columname;
query:
alter table  customer drop column city;


change column name*********
syntax:
alter table table_name change column old_columnname newcolumn name datatype;
Query***
alter table customer change column name  cust_name varchar(20);


change table name**********
syntax:
alter table tablename rename to new tablename;
query******
 alter table customer rename customer1; 

*********day 3******
DML---1) insert 2)update 3)delete

inserting multiple values at same time

insert into  book values(1000,"java",23223.34,200)
insert into  book(bid,bname,price,pages)values(1000,"java",23223.34,200),(2000,"python",34334.6,400),(300,"sql",21321.32,500),(400,"oracle",2343.45,600);

update query----
it update data
syntax:
update tablename set columnanme=value where coloumn ="value"

query
update book set author="xyz" where bid=300;


updating multiple values at same times

update book set author="brijani" ,rating=4 where bid=4000;

delete data***********
it use to delete a perticular row
syntax:
delete from tablename where condition
query***
delete from book where bid=5000;


delete perticular column
alter table drop coulumn rating;


truncate table***
it removes all data inside the tables but remains the column

syntax:truncate table tablename


query:
truncate table customer



drop table ****
it removes tables fro the database so cant retrive that table agin

syntax:
drop table table name

query:
drop table customer

day 5****************************

select query with relational operator****
>, <,<=,>=,=

select * from book where pages>=500;
select author,rating from book where pages<=500;
select author,rating from book where bname="sql";

select statement with and,or ,not(logical operator)

select * from book where bname="java" or bname="sql";

select * from book where bname="java" or author="brijani";

select * from book where bname="java" and author="brijani";

select * from book where pages>200 and author="brijani";

 select * from book where pages>2000 and author="brijani";

select bname,rating from book where pages>2000 and author="brijani";

select * from book where bname="java" or bname="android" bname="oracle" or bname="python";

if you want replace multiple times of or then we can use in clause
 
select bname from book where bname in("java","oracle","android","python");
select bname from book where bname  not in("java","oracle","android","python");


Distinct keyword-----
retrive onlu unique data
select distinct author from book;


Between(range) keyword ----
 select * from book where bid between 3000 and 7000;


order by clause
asc---asending order
desc---desending order

select * from book order by rating asc;
select bname,price from book order by price desc;

select * from book limit 5;


select  pages,bname from book limit 5;

task---show last 4 records without using where caluse;
select * from book order by bid DESC limit 4;-------IMP Query


Like keyword----pattern matching
% ---represent zero,one or more occurances
_ ----represent one ,single character

like'a%'----start with a
like'%a'---ends with a
like'%ab%'---find any value that ab value

like'_a'---second position is a
like'a_%' find any value that start with a and atleast 2 character length

*********
start with
select * from book where bname like 'p%';
ends with
select * from book where bname like '%p';
in between

select * from book where bname like '%th%';

contains second position of a
select * from book where bname like '_a%';

contains third position of a
select * from book where bname like '__a%';

start with a any character fill with underscore
 select * from book where bname like 'a___%';


starts with a ends with d  aand constains 5 underscore......
select * from book where bname like 'a_____d%';



day 9*********************
alter table book add column pub_date date;

update book set pub_date="2022-09-08" where bid=1000;

STring functions
1)concatination-----it used to join two columns
select concat(bname," ",price)from book;

2) upper---convert data into upper case
select upper(author) as "Result" from book;

3)lower---

select lower(author) as "Result" from book;

4) replace---replace one string by another
syntax:
select replace(column name,orginal string,replaced string)

select replace(bname,"WDK","xyzs") as "Result" from book;


5) Length---count the length of charater in string----
select length(bname) from book;

date and time functions**************
select curdate();
select curtime();
select now();
select now() as "Result";
select sysdate();
 select date_format("2022-04-08","%Y");
select date_format("2022-04-08","%y");
select date_format("2022-04-08","%M");
select date_format("2022-04-08","%Y%M%D");
select date_format("2022-04-08","%y%m%d");
 select date_format(pub_date,"%Y-%M-%D") from book;
select datediff("2024-09-08","2023-08-07");

 select date_format(pub_date,"%M-%Y-%D") from book;

Maths functions*********
select abs(10.5);
 select abs(10);
select abs(10.1);
select floor(10.1);
select floor(10.5);
select floor(10);
select round(10);
select round(10.9);
select round(10.2);
select round(10.5);
select pow(10,6);
select sqrt(16);


Aggrigate functions /group by clause
count
min
max
avg
sum
select pages,count(*) as "total count" from book group by pages;
select pages,min(pages) as "total count" from book group by pages;
select pages,max(pages) as "total count" from book group by pages;
select pages,avg(pages) as "total count" from book group by pages;
select pages,sum(pages) as "total count" from book group by pages;
having clause-------
select rating,sum(pages) as "total count" from book group by rating having sum(pages)>700;



day 10**************
Foreign key
1)it is used to create relationship between two or more table.
2)if you want to make FK then this key is compuslaory pk of another table
3)it contains duplicate data
4)it contains null data
5)one table contains multiple FK


create table customer1(c_id int primary key,c_name varchar(20),c_address varchar(20));

create table product1(p_id int primary key,p_quantity int,price float,c_id int, foreign key(c_id) references customer1(c_id));

adding third table************************
create table employee(e_id int primary key ,e_salary int,e_degination varchar(20),c_id int,p_id int,foreign key(c_id)
references customer1(c_id),foreign key(p_id)references product1(p_id));

insert into employee values(50004,4324,"Tester",40,1000);



adding primary key after creating table**************
alter table table_name add constraint pk_p primary key (column_name);

alter table cust add constraint pk1 primary key(c_id);

alter table cust drop constraint pk1;


Joins:
inner join---show data whichh is comman in both tables

synatx:
select tablename.columnname1,tablename.columname2 from firsttablename inner join second tablename on firsttablename.columnname=secondtablename.columnname;

select customer1.c_id, customer1.c_name,customer1.c_address,product1.price from customer1 inner join product1 on customer1.c_id=product1.c_id;

left join----full fill all data from left table which is common in right table if not common then it will se by default null values in right table....
select customer1.c_id, customer1.c_name,customer1.c_address,product1.price ,product1.p_quantity from customer1 left join product1 on customer1.c_id=product1.c_id;

right join----full fill all data from right table which is common in left  table if not common then it will se by default null values in left table....
select customer1.c_id, customer1.c_name,customer1.c_address,product1.price ,product1.p_quantity from customer1 left join product1 on customer1.c_id=product1.c_id;

join on 3 tables***************
 select customer1.c_id,customer1.c_name,product1.price,employee.e_salary from customer1 inner join product1 on customer1.c_id=product1.c_id inner join employee on product1.c_id=employee.c_id;


when we are assign the primary key name on table creation**************
create table demo (d_id int,d_name varchar(10),constraint pk1 primary key(d_id));